#include <iostream>  // Подключаем библиотеку для работы с вводом и выводом
#include <malloc.h>  // Подключаем библиотеку для работы с функциями выделения памяти
using namespace std; // Используем пространство имен std для упрощения синтаксиса (например, cout вместо std::cout)

// Функция для сортировки массива по возрастанию до минимального элемента
void sortBeforeMin(int* X, int N) {
    int minIndex = 0; // Переменная для хранения индекса минимального элемента массива, инициализируем первым элементом

    // Находим минимальный элемент и его индекс
    for (int i = 1; i < N; i++) { // Перебираем массив начиная со второго элемента
        if (*(X + i) < *(X + minIndex)) { // Если текущий элемент меньше минимального
            minIndex = i; // Обновляем индекс минимального элемента
        }
    }

    // Вывод минимального элемента массива
    cout << "Минимальный элемент массива: " << *(X + minIndex) << endl;

    // Сортировка элементов до минимального индекса (используем пузырьковую сортировку)
    for (int i = 0; i < minIndex - 1; i++) { // Внешний цикл по элементам до минимального индекса
        for (int j = 0; j < minIndex - i - 1; j++) { // Внутренний цикл для пары соседних элементов
            if (*(X + j) > *(X + j + 1)) { // Если текущий элемент больше следующего
                // Меняем элементы местами
                int temp = *(X + j); // Сохраняем значение текущего элемента
                *(X + j) = *(X + j + 1); // Копируем следующий элемент на место текущего
                *(X + j + 1) = temp; // Сохраняем значение из временной переменной на место следующего элемента
            }
        }
    }

    // Вывод массива после сортировки
    cout << "Массив после сортировки элементов до минимального:\n";
    for (int i = 0; i < N; i++) { // Перебираем все элементы массива
        cout << *(X + i) << " "; // Выводим текущий элемент через указатель
    }
    cout << "\n"; // Переход на новую строку
}

int main() {
    setlocale(LC_ALL, "Russian"); // Устанавливаем локаль для корректного вывода русского текста
    int* X, N; // Указатель для массива X и переменная для его размера

    // Ввод размера массива
    cout << "Введите размер массива N: "; // Просим пользователя ввести размер массива
    cin >> N; // Считываем размер массива

    // Выделение памяти для массива через calloc
    X = (int*)calloc(N, sizeof(int)); // Выделяем память под массив, инициализируя элементы нулями

    // Ввод элементов массива
    cout << "Введите элементы массива:\n"; // Просим пользователя ввести элементы массива
    for (int i = 0; i < N; i++) { // Перебираем элементы массива
        cin >> *(X + i); // Считываем значение в соответствующую ячейку массива
    }

    // Вызов функции для обработки массива
    sortBeforeMin(X, N); // Передаем указатель на массив и его размер в функцию

    // Освобождение памяти
    free(X); // Освобождаем выделенную память, чтобы избежать утечек

    return 0; // Завершаем выполнение программы
}
