#include <iostream>  // Подключаем библиотеку для работы с вводом и выводом
#include <math.h>    // Подключаем библиотеку математических функций (sqrt, abs, log)
using namespace std; // Используем пространство имен std для упрощения (например, cout вместо std::cout)

int main() {
    // Инициализация начальных данных
    double a = 2.17;      // Константа a, используемая в формуле
    double xn = -1.5;     // Начальное значение аргумента x
    double xk = 1.5;      // Конечное значение аргумента x
    double dx = 0.2;      // Шаг изменения x
    double x = xn;        // Переменная x, начальное значение задается равным xn
    double y;             // Переменная для хранения результата вычислений
    double sum = 0;       // Переменная для накопления суммы положительных значений y
    double product = 1;   // Переменная для накопления произведения положительных значений y
    int count = 0;        // Счетчик итераций
    int positiveCount = 0; // Счетчик положительных значений y

    // Вывод заголовка таблицы значений x и y
    cout << "x\t\ty\n";

    // Цикл do-while: выполняется хотя бы один раз, проверка условия в конце
    do {
        // Вычисляем значение функции y по формуле
        y = sqrt(abs(a + x * x) * log(a * a + 3 * 4)) / 2;
        // abs — вычисление модуля выражения a + x * x
        // log — натуральный логарифм от a^2 + 12
        // sqrt — квадратный корень из результата

        // Выводим значения x и y, если итерация четная
        if (count % 2 == 0) { // Условие четности (остаток от деления count на 2 равен 0)
            cout << x << "\t\t" << y << endl; // Выводим текущие значения x и y
        }

        // Обрабатываем положительные значения y
        if (y > 0) {
            positiveCount++; // Увеличиваем счетчик положительных значений
            sum += y;        // Добавляем y к сумме
            product *= y;    // Умножаем y на произведение
        }

        // Увеличиваем счетчик итераций
        count++;
        // Увеличиваем x на шаг dx
        x += dx;
    } while (x <= xk); // Условие продолжения цикла: пока x не превышает xk

    // Вывод итогов после завершения цикла
    cout << "Sum: " << sum              // Вывод суммы положительных y
        << "\nProduct: " << product    // Вывод произведения положительных y
        << "\nPositive Count: " << positiveCount << endl; // Вывод количества положительных y

    return 0; // Завершаем выполнение программы
}
